name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker ghcr.io
    
    - name: Deploy backend to production
      run: |
        gcloud run deploy health-guide-backend-production \
          --image ghcr.io/${{ github.repository_owner }}/health_guide/backend:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 2 \
          --concurrency 80 \
          --min-instances 1 \
          --max-instances 5 \
          --set-env-vars "SECRET_KEY=${{ secrets.PRODUCTION_SECRET_KEY }}" \
          --set-env-vars "DEBUG=False" \
          --set-env-vars "ENVIRONMENT=production" \
          --tag production
    
    - name: Deploy frontend to production
      run: |
        gcloud run deploy health-guide-frontend-production \
          --image ghcr.io/${{ github.repository_owner }}/health_guide/frontend:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --concurrency 80 \
          --min-instances 1 \
          --max-instances 3 \
          --tag production
    
    - name: Run production smoke tests
      run: |
        sleep 60
        
        BACKEND_URL=$(gcloud run services describe health-guide-backend-production --platform managed --region us-central1 --format 'value(status.url)')
        FRONTEND_URL=$(gcloud run services describe health-guide-frontend-production --platform managed --region us-central1 --format 'value(status.url)')
        
        curl -f "$BACKEND_URL/health/" || exit 1
        curl -f "$FRONTEND_URL/health" || exit 1
        
        echo "ðŸš€ Production deployment successful!"
        echo "Backend: $BACKEND_URL"
        echo "Frontend: $FRONTEND_URL"
    
    - name: Create GitHub Release
      if: success()
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ðŸš€ Production deployment v${{ github.run_number }}
          
          Commit: ${{ github.sha }}
        draft: false
        prerelease: false